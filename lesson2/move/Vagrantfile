# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :testraid10 => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.101',
	:disks => {
		:sata1 => {
			:dfile => './sata1.vdi',
			:size => 40000,
			:port => 1
		},
		:sata2 => {
                        :dfile => './sata2.vdi',
                        :size => 40000, # Megabytes
			:port => 2
		}

	}

		
  },
}

Vagrant.configure("2") do |config|

config.vm.synced_folder '.', '/vagrant', disabled: true

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
            	  vb.customize ["modifyvm", :id, "--memory", "4096" , "--cpus", "4"]
                  needsController = false
		  boxconfig[:disks].each do |dname, dconf|
			  unless File.exist?(dconf[:dfile])
				vb.customize ['createhd', '--filename', dconf[:dfile],  '--size', dconf[:size]]
                                needsController =  true
                          end

		  end
                  if needsController == true
                     vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                     boxconfig[:disks].each do |dname, dconf|
                         vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                     end
                  end
          end
		  
 	  box.vm.provision "shell", inline: <<-SHELL
	      mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh
		  echo "Install required software"
	      yum install -y mdadm smartmontools hdparm gdisk
		  echo "Create partitions on disks /dev/sd[bc]"
		  echo -e "n\np\n1\n\n\nw" | fdisk /dev/sdb
		  echo -e "n\np\n1\n\n\nw" | fdisk /dev/sdc
		  fdisk -l
		  echo "Create RAID 1 "
		  sleep 30
		  echo "y" | mdadm --create --verbose /dev/md0 --level=1 --raid-devices=2 /dev/sd[bc]1 
		  mdadm --detail /dev/md0
		  echo "Waiting Raid sync.."		  
		  sleep 30
		  mdadm --detail /dev/md0
		  echo "Create partition on RAID"
		  echo -e "n\np\n1\n\n\nw" | fdisk /dev/md0
		  echo "Create file system on partition"
		  mkfs.xfs /dev/md0p1
		  echo "Mount file system"
		  mount /dev/md0p1 /mnt/
		  echo "Clone current system to /mnt/"
		  rsync -axu / /mnt/
		  echo "Mount /proc /dev /sys /run to /mnt/"
		  mount --bind /proc /mnt/proc && mount --bind /dev /mnt/dev && mount --bind /sys /mnt/sys && mount --bind /run /mnt/run
		  #chroot /mnt/
		  chroot /mnt/ /bin/bash -c 'newid1=$(blkid /dev/md0p1 -s UUID -o value) && oldid1=$(blkid /dev/sda1 -s UUID -o value) && sed -i "s/$oldid1/$newid1/g" /etc/fstab'
		 chroot /mnt/ /bin/bash -c 'mdadm --detail --scan > /etc/mdadm.conf'
		  chroot /mnt/ /bin/bash -c 'mv /boot/initramfs-$(uname -r).img /boot/initramfs-$(uname -r).img.bak && dracut /boot/initramfs-$(uname -r).img $(uname -r)'
		  chroot /mnt/ /bin/bash -c 'sed -i "s/crashkernel=auto/crashkernel=auto rd.auto=1/g" /etc/default/grub'
		  chroot /mnt/ /bin/bash -c 'grub2-mkconfig -o /boot/grub2/grub.cfg && grub2-install /dev/sdb'
		  #echo -e "y" | fixfiles relabel
		  chroot /mnt/ /bin/bash -c 'fixfiles restore'
		  chroot /mnt/ /bin/bash -c "grub2-mkconfig -o /boot/grub2/grub.cfg && grub2-install /dev/sda"
		  chroot /mnt/ /bin/bash -c 'echo -e "d\nw" | fdisk /dev/sda'
		  #exit
		  shutdown -r now
		  #dd if=/dev/sda of=/dev/md0 conv=noerror
		  #parted /dev/md0 print

  	  SHELL
	  
	  	 box.vm.provision :reload
	 
	 	box.vm.provision "shell", inline: <<-SHELL
		echo Start provisioning...
		mdadm --add /dev/md0 /dev/sda
		mdadm --detail /dev/md0
		df -h
	 SHELL
	  


      end
  end
end

