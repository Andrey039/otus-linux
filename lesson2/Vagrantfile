# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :testraid10 => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.101',
	:disks => {
		:sata1 => {
			:dfile => './sata1.vdi',
			:size => 250,
			:port => 1
		},
		:sata2 => {
                        :dfile => './sata2.vdi',
                        :size => 250, # Megabytes
			:port => 2
		},
                :sata3 => {
                        :dfile => './sata3.vdi',
                        :size => 250,
                        :port => 3
                },
                :sata4 => {
                        :dfile => './sata4.vdi',
                        :size => 250, # Megabytes
                        :port => 4
                },
                :sata5 => {
                        :dfile => './sata5.vdi',
                        :size => 250, # Megabytes
                        :port => 5
                }

	}

		
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
            	  vb.customize ["modifyvm", :id, "--memory", "2048"]
                  needsController = false
		  boxconfig[:disks].each do |dname, dconf|
			  unless File.exist?(dconf[:dfile])
				vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                needsController =  true
                          end

		  end
                  if needsController == true
                     vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                     boxconfig[:disks].each do |dname, dconf|
                         vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                     end
                  end
          end
		  
 	  box.vm.provision "shell", inline: <<-SHELL
	      mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh
		  echo "Install required software"
	      yum install -y mdadm smartmontools hdparm gdisk
		  echo "Create partitions on disks /dev/sd[bcde]"
		  echo -e "n\np\n1\n\n\nw" | fdisk /dev/sdb
		  echo -e "n\np\n1\n\n\nw" | fdisk /dev/sdc
		  echo -e "n\np\n1\n\n\nw" | fdisk /dev/sdd
		  echo -e "n\np\n1\n\n\nw" | fdisk /dev/sde
		  echo -e "n\np\n1\n\n\nw" | fdisk /dev/sdf 
		  echo "Create RAID 10 on /dev/sd[bcde]"
		  mdadm --create --verbose /dev/md0 --level=10 --raid-devices=4 /dev/sd[bcde]1
		  mdadm --detail /dev/md0
		  echo "Waiting Raid sync.."		  
		  sleep 30
		  mdadm --detail /dev/md0
		  echo "Try to destroy /dev/sdd disk"
		  echo -e "d\nw" | fdisk /dev/sdd
		  echo "Send partitition update to kernel"		  
		  partprobe
		  echo "Remove Broken disk from RAID"
		  mdadm /dev/md0 -r -f /dev/sdd1
		  sleep 30
		  echo Start RAID Repairing...
		  echo "Add new disk /dev/sdf1 to RAID"
		  mdadm /dev/md0 -a /dev/sdf1
		  echo "Current RAID Status"
		  mdadm --detail /dev/md0
		  echo "Waiting sync.."
		  sleep 30
		  mdadm --detail /dev/md0
		  echo "Create GPT Partitition Table and partitions on RAID"
		  parted /dev/md0 mklabel gpt
		  parted /dev/md0 mkpart primary 0% 10%
		  parted /dev/md0 mkpart primary 10% 20%
		  parted /dev/md0 mkpart primary 20% 30%
		  parted /dev/md0 mkpart primary 30% 40%
		  parted /dev/md0 mkpart primary 40% 50%
		  echo "Show current partitions"
		  parted /dev/md0 print

  	  SHELL
	  


      end
  end
end

