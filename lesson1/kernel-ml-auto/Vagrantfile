# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos/7"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
  
    config.vm.define "Centos7-5-ml-kernel"
    config.vm.provider :virtualbox do |vb|
        vb.name = "Centos7-5-ml-kernel"
	vb.cpus = "2"
	vb.memory = "2048"
    end

	config.vm.provision "shell", inline: <<-SHELL
		echo Start provisioning...
		# Install elrepo
		yum install -y http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm
		# Install new kernel
		yum --enablerepo elrepo-kernel install kernel-ml kernel-ml-devel kernel-ml-headers -y
		# Remove older kernels
		rm -f /boot/*3.10*
		# Update GRUB
		grub2-mkconfig -o /boot/grub2/grub.cfg
		grub2-set-default 0
		echo "Grub update done."
		shutdown -r now
		# Reboot VM
		shutdown -r now
	 SHELL
	 
	 config.vm.provision :reload
	 
	 	config.vm.provision "shell", inline: <<-SHELL
		echo Start provisioning...
		echo "Install Virtual Box Guest Additions"
		VBOX_VERSION=6.0.14
		yum install elfutils-libelf-devel -y
		rpm -Uvh http://download-ib01.fedoraproject.org/pub/epel/7/x86_64/Packages/d/dkms-2.7.1-1.el7.noarch.rpm
		yum -y install --enablerepo elrepo-kernel  wget perl gcc dkms  make bzip2
		wget http://download.virtualbox.org/virtualbox/${VBOX_VERSION}/VBoxGuestAdditions_${VBOX_VERSION}.iso
		mkdir /media/VBoxGuestAdditions
		mount -o loop,ro VBoxGuestAdditions_${VBOX_VERSION}.iso /media/VBoxGuestAdditions
		sh /media/VBoxGuestAdditions/VBoxLinuxAdditions.run
		rm -f VBoxGuestAdditions_${VBOX_VERSION}.iso
		umount /media/VBoxGuestAdditions
		rmdir /media/VBoxGuestAdditions
		unset VBOX_VERSION
		# Reboot VM
		shutdown -r now
	 SHELL

  
  
end
