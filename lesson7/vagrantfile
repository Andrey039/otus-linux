# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :testrpm => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.101',
	:disks => {
		:sata01 => {
                        :dfile => 'sata01.vdi',
                        :size => 10, # Megabytes
			:port => 1
		}

	}

		
  },
}

Vagrant.configure("2") do |config|

#config.ssh.extra_args = ["-R", "3128:localhost:3128"]
#config.vm.synced_folder '.', '/vagrant', disabled: true
config.ssh.forward_agent = true

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s
		  
          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
            	  vb.customize ["modifyvm", :id, "--memory", "2048"]
                  needsController = false
		  boxconfig[:disks].each do |dname, dconf|
			  unless File.exist?(dconf[:dfile])
				vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                needsController =  true
                          end

		  end
                  if needsController == true
                     boxconfig[:disks].each do |dname, dconf|
                         vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                     end
                  end
          end
		  

	  


      end
  end
  
config.vm.provision "shell", inline: <<-SHELL
              mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh
                  yum install -y createrepo
                  yum install -y redhat-lsb-core wget rpmdevtools rpm-build createrepo yum-utils
                  yum install -y openssl-devel zlib-devel pcre-devel gcc
                  yum install -y docker
                  sudo wget https://nginx.org/packages/centos/7/SRPMS/nginx-1.14.1-1.el7_4.ngx.src.rpm --directory-prefix=/root/
                  sudo wget https://www.openssl.org/source/latest.tar.gz --directory-prefix=/root/
                  rpm -ivh /root/nginx-1.14.1-1.el7_4.ngx.src.rpm
                  sudo tar -xvf /root/latest.tar.gz --directory=/root/
                  yum-builddep /root/rpmbuild/SPECS/nginx.spec
                  sed -i 's+--with-debug+--with-debug --with-openssl=/root/openssl-1.1.1d+' /root/rpmbuild/SPECS/nginx.spec
                  rpmbuild -bb /root/rpmbuild/SPECS/nginx.spec
                  ll /root/rpmbuild/RPMS/x86_64/
                  yum localinstall -y /root/rpmbuild/RPMS/x86_64/nginx-1.14.1-1.el7_4.ngx.x86_64.rpm
                  systemctl start nginx
                  systemctl status nginx
                  systemctl start docker
                  setenforce 0
                  mkdir /srv/nginx/
                  mkdir /var/www
                  export no_proxy=localhost
                  chmod -R 0755 /var/www
                  cp /root/rpmbuild/RPMS/x86_64/nginx-* /var/www
                  docker run -d --name nginxrepo  -v /var/www:/usr/share/nginx/html -p 8080:80 nginx:latest
                  #docker exec nginxrepo awk '/index.html/{print "autoindex on;" }1' /etc/nginx/conf.d/default.conf > default.conf
                  docker cp /vagrant/default.conf nginxrepo:/etc/nginx/conf.d/default.conf
                  docker exec nginxrepo service nginx reload
                  createrepo /var/www
                  wget localhost:8080/nginx-1.14.1-1.el7_4.ngx.x86_64.rpm
		SHELL
		  
		  
		  
		  
		  
	
	  
  ####
  
end

